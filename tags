!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_OUTPUT_EXCMD	mixed	/number, pattern, mixed, or combineV2/
!_TAG_OUTPUT_FILESEP	slash	/slash or backslash/
!_TAG_OUTPUT_MODE	u-ctags	/u-ctags or e-ctags/
!_TAG_PATTERN_LENGTH_LIMIT	96	/0 for no limit/
!_TAG_PROC_CWD	/home/knd/code/min-server/	//
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/
!_TAG_PROGRAM_VERSION	5.9.0	/p5.9.20210110.0/
0	ormconfig.json	/^      "src\/entity\/**\/*.ts"$/;"	s	array:entities
0	ormconfig.json	/^      "src\/migration\/**\/*.ts"$/;"	s	array:migrations
0	ormconfig.json	/^      "src\/subscriber\/**\/*.ts"$/;"	s	array:subscribers
0	tsconfig.json	/^         "es5",$/;"	s	array:compilerOptions.lib
1	tsconfig.json	/^         "es6"$/;"	s	array:compilerOptions.lib
@types/node	package.json	/^      "@types\/node": "^8.0.29",$/;"	s	object:devDependencies
Awesome Project Build with TypeORM	README.md	/^# Awesome Project Build with TypeORM$/;"	c
User	src/entity/User.ts	/^export class User {$/;"	c
age	src/entity/User.ts	/^    age: number;$/;"	p	class:User
cli	ormconfig.json	/^   "cli": {$/;"	o
compilerOptions	tsconfig.json	/^   "compilerOptions": {$/;"	o
database	ormconfig.json	/^   "database": "test",$/;"	s
dependencies	package.json	/^   "dependencies": {$/;"	o
description	package.json	/^   "description": "Awesome project developed with TypeORM.",$/;"	s
devDependencies	package.json	/^   "devDependencies": {$/;"	o
emitDecoratorMetadata	tsconfig.json	/^      "emitDecoratorMetadata": true,$/;"	b	object:compilerOptions
entities	ormconfig.json	/^   "entities": [$/;"	a
entitiesDir	ormconfig.json	/^      "entitiesDir": "src\/entity",$/;"	s	object:cli
experimentalDecorators	tsconfig.json	/^      "experimentalDecorators": true,$/;"	b	object:compilerOptions
firstName	src/entity/User.ts	/^    firstName: string;$/;"	p	class:User
host	ormconfig.json	/^   "host": "localhost",$/;"	s
id	src/entity/User.ts	/^    id: number;$/;"	p	class:User
lastName	src/entity/User.ts	/^    lastName: string;$/;"	p	class:User
lib	tsconfig.json	/^      "lib": [$/;"	a	object:compilerOptions
logging	ormconfig.json	/^   "logging": false,$/;"	b
migrations	ormconfig.json	/^   "migrations": [$/;"	a
migrationsDir	ormconfig.json	/^      "migrationsDir": "src\/migration",$/;"	s	object:cli
module	tsconfig.json	/^      "module": "commonjs",$/;"	s	object:compilerOptions
moduleResolution	tsconfig.json	/^      "moduleResolution": "node",$/;"	s	object:compilerOptions
mysql	package.json	/^      "mysql": "^2.14.1"$/;"	s	object:dependencies
name	package.json	/^   "name": "new-typeorm-project",$/;"	s
outDir	tsconfig.json	/^      "outDir": ".\/build",$/;"	s	object:compilerOptions
password	ormconfig.json	/^   "password": "test",$/;"	s
port	ormconfig.json	/^   "port": 3306,$/;"	n
reflect-metadata	package.json	/^      "reflect-metadata": "^0.1.10",$/;"	s	object:dependencies
scripts	package.json	/^   "scripts": {$/;"	o
sourceMap	tsconfig.json	/^      "sourceMap": true$/;"	b	object:compilerOptions
start	package.json	/^      "start": "ts-node src\/index.ts"$/;"	s	object:scripts
subscribers	ormconfig.json	/^   "subscribers": [$/;"	a
subscribersDir	ormconfig.json	/^      "subscribersDir": "src\/subscriber"$/;"	s	object:cli
synchronize	ormconfig.json	/^   "synchronize": true,$/;"	b
target	tsconfig.json	/^      "target": "es5",$/;"	s	object:compilerOptions
ts-node	package.json	/^      "ts-node": "3.3.0",$/;"	s	object:devDependencies
type	ormconfig.json	/^   "type": "mysql",$/;"	s
typeorm	package.json	/^      "typeorm": "0.2.31",$/;"	s	object:dependencies
typescript	package.json	/^      "typescript": "3.3.3333"$/;"	s	object:devDependencies
user	src/index.ts	/^    const user = new User();$/;"	C
username	ormconfig.json	/^   "username": "test",$/;"	s
users	src/index.ts	/^    const users = await connection.manager.find(User);$/;"	C
version	package.json	/^   "version": "0.0.1",$/;"	s
